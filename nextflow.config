

nextflow.enable.moduleBinaries = true
outputDir = 'results_amr-annot'
resume = true

plugins {
  id 'nf-schema@2.4.1'
}
validation.help.enabled = true


params.org_name           = null

params.skip_prokka        = true
params.skip_cgemlst       = false
params.skip_MLST          = false
params.skip_resfinder     = false
params.skip_amrfinderplus = false
params.skip_plasmidfinder = false
params.skip_mobtyper      = false
params.skip_orgfinder     = false
params.skip_speciator     = true
params.skip_plasmidfinder_longread  = false
params.skip_resfinder_longread      = false
params.skip_plasmidfinder_shortread = false
params.skip_resfinder_shortread     = false

params.default_mobtyper_args      = ''
params.default_amrfinderplus_args = ''
params.default_plasmidfinder_args = ''
params.default_cgemlst_args       = null // do not run by default
params.default_MLST_args          = ''   // autodetect species by default
params.default_prokka_args        = '--kingdom Bacteria'

includeConfig 'conf/orgs_flags.config'

profiles {
    standard {
        docker {
            enabled = true
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
    }

    hpc {
        apptainer {
            enabled = true
            runOptions = "-B/scratch -B/srv/beegfs/scratch/users -B${System.getenv('HOME')}"
            autoMounts = true
            cacheDir = "${System.getenv('HOME')}/scratch/singularity"
            pullTimeout = '1h'
        }

        process {
            executor = "slurm"
            queue = 'shared-cpu'
            resourceLimits = [ cpus: 32, memory: 64.GB, time: 11.h ]
        }
    }
    
		tiny {
				process {
				    resourceLimits = [ cpus: 8, memory: 14.GB, time: 3.h ]
				}
		}
}


process.errorStrategy = 'ignore'
process.shell = [
    "bash",
    "-C",         // No clobber - prevent output redirection from overwriting files.
    "-e",         // Exit if a tool returns a non-zero status/exit code
    "-u",         // Treat unset variables and parameters as an error
    "-o",         // Returns the status of the last command to exit..
    "pipefail"    //   ..with a non-zero status or zero if all successfully execute
]



manifest {
    name            = 'amr-genomics/amr-annot'
    contributors    = [
        [
            name: 'Julien Prados',
            affiliation: '',
            email: '',
            github: '',
            contribution: ['author', 'maintainer'],
            orcid: ''
        ],
    ]
    homePage        = 'https://gitlab.unige.ch/amr-annot'
    description     = 'Annotation of AMR bacterial genomes.'
    mainScript      = 'main.nf'
    defaultBranch   = 'master'
    nextflowVersion = '!>=24.10.4'
    version         = 'v0.1'
    doi             = ''
}

